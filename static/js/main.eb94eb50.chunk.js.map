{"version":3,"sources":["data.js","cases/NewCase.jsx","cases/Cases.jsx","buckets/Buckets.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SYMPTOMS","FEVER","COUGH","BREATHING_PROBLEM","CLOSE_CONTACT","COMING_FROM_ABROAD","SYMPTOM_NAMES","initialState","id","symptoms","createNext","NewCase","open","handleClose","React","useState","values","setValues","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","FormGroup","column","TextField","label","variant","onChange","event","target","value","required","Object","keys","map","symptomName","FormControlLabel","key","control","Checkbox","checked","symptom","name","DialogActions","Button","onClick","close","color","disabled","symptomOccurred","occurred","CheckCircleOutline","style","green","HighlightOff","red","Cases","cases","addCase","calculateBuckets","newCaseModal","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","includes","probability","Fab","filter","marginTop","Buckets","buckets","Grid","container","spacing","margin","item","xs","justify","bucket","height","width","marginBottom","direction","Typography","p","samples","sample","cursor","App","props","state","currentStep","console","log","this","setState","caseIndex","findIndex","it","splice","push","changeStage","Container","className","bind","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb94eb50.chunk.js","sourcesContent":["export const STEPS = [\n  'CASES', 'BUCKETS'\n]\n\nexport const SYMPTOMS = {\n  FEVER: 'FEVER',\n  COUGH: 'COUGH',\n  BREATHING_PROBLEM: 'BREATHING_PROBLEM',\n  CLOSE_CONTACT: 'CLOSE_CONTACT',\n  COMING_FROM_ABROAD: 'COMING_FROM_ABROAD'\n}\n","import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport { SYMPTOMS } from '../data'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport TextField from '@material-ui/core/TextField'\n\nconst SYMPTOM_NAMES = {\n  [SYMPTOMS.FEVER]: 'Fever',\n  [SYMPTOMS.COUGH]: 'Cough',\n  [SYMPTOMS.BREATHING_PROBLEM]: 'Difficulty with breathing',\n  [SYMPTOMS.COMING_FROM_ABROAD]: 'Return from Abroad',\n  [SYMPTOMS.CLOSE_CONTACT]: 'Close contact with infected person'\n}\n\nconst initialState = {\n  id: '',\n  symptoms: {\n    [SYMPTOMS.FEVER]: false,\n    [SYMPTOMS.COUGH]: false,\n    [SYMPTOMS.BREATHING_PROBLEM]: false,\n    [SYMPTOMS.COMING_FROM_ABROAD]: false,\n    [SYMPTOMS.CLOSE_CONTACT]: false\n  },\n  createNext: false\n}\nexport const NewCase = ({ open, handleClose }) => {\n  const [values, setValues] = React.useState(initialState)\n\n  const updateSymptom = symptom => () => {\n    setValues({\n      ...values,\n      symptoms:\n        {\n          ...values.symptoms,\n          [symptom]: !values.symptoms[symptom]\n        }\n    })\n  }\n\n  const updateCreateNext = () => {\n    setValues({\n      ...values,\n      createNext: !values.createNext\n    })\n  }\n\n  const updateId = (event) => {\n    setValues({ ...values, id: event.target.value })\n  }\n\n  const clearValues = () => {\n    setValues({ ...initialState, createNext: true })\n  }\n\n  const createNewCase = () => {\n    if (!values.createNext) {\n      handleClose({ close: true, values: { id: values.id, symptoms: values.symptoms } })\n    } else {\n      handleClose({ close: false, values: { id: values.id, symptoms: values.symptoms } })\n      clearValues()\n    }\n  }\n\n  const closeDialog = () => {\n    handleClose({ close: true })\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Craete new case</DialogTitle>\n      <DialogContent>\n\n        <FormGroup column>\n\n          <TextField\n            label=\"id\"\n            variant=\"outlined\"\n            onChange={updateId}\n            value={values.id}\n            required={true}\n          />\n          {\n            Object.keys(SYMPTOMS).map(symptomName =>\n              <FormControlLabel\n                key={symptomName}\n                control={<Checkbox checked={values.symptoms[symptomName]} onChange={updateSymptom(symptomName)} name={SYMPTOM_NAMES[symptomName]}/>}\n                label={SYMPTOM_NAMES[symptomName]}\n              />)\n          }\n        </FormGroup>\n\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={closeDialog} color=\"secondary\">\n          Close\n        </Button>\n        <FormControlLabel\n          control={<Checkbox checked={values.createNext} onChange={updateCreateNext} color={'secondary'}/>}\n          label=\"Create next case\"\n        />\n        <Button onClick={createNewCase} color=\"primary\" disabled={!values.id}>\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\n\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport { SYMPTOMS } from '../data'\nimport { CheckCircleOutline, HighlightOff } from '@material-ui/icons'\nimport green from '@material-ui/core/colors/green'\nimport red from '@material-ui/core/colors/red'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport { NewCase } from './NewCase'\nimport Button from '@material-ui/core/Button'\n\nconst symptomOccurred = occurred => occurred ?\n  <CheckCircleOutline style={{ color: green[500] }}/> : <HighlightOff style={{ color: red[500] }}/>\n\nexport const Cases = ({ cases, addCase, calculateBuckets }) => {\n  const [values, setValues] = React.useState({ newCaseModal: false })\n\n  const openModal = () => {\n    setValues({ newCaseModal: true })\n  }\n\n  const closeModal = ({ close, values }) => {\n    setValues({ newCaseModal: !close })\n    if (values) {\n      addCase({ id: values.id, symptoms: Object.keys(values.symptoms).filter(key => values.symptoms[key]) })\n    }\n  }\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>id</TableCell>\n              <TableCell align=\"right\">Fever</TableCell>\n              <TableCell align=\"right\">Cough</TableCell>\n              <TableCell align=\"right\">Difficulty with breathing</TableCell>\n              <TableCell align=\"right\">Close contact with infected person</TableCell>\n              <TableCell align=\"right\">Return from Abroad</TableCell>\n              <TableCell align=\"right\">Probability</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {cases.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{symptomOccurred(row.symptoms.includes(SYMPTOMS.FEVER))}</TableCell>\n                <TableCell align=\"right\">{symptomOccurred(row.symptoms.includes(SYMPTOMS.COUGH))}</TableCell>\n                <TableCell align=\"right\">{symptomOccurred(row.symptoms.includes(SYMPTOMS.BREATHING_PROBLEM))}</TableCell>\n                <TableCell align=\"right\">{symptomOccurred(row.symptoms.includes(SYMPTOMS.CLOSE_CONTACT))}</TableCell>\n                <TableCell align=\"right\">{symptomOccurred(row.symptoms.includes(SYMPTOMS.COMING_FROM_ABROAD))}</TableCell>\n                <TableCell align=\"right\">{row.probability}%</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Fab aria-label={'Dodaj nowy przypadek'} onClick={openModal}>\n        <AddIcon/>\n      </Fab>\n      <NewCase open={values.newCaseModal} handleClose={closeModal}/>\n      <div style={{ marginTop: 20 }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={calculateBuckets}>\n          Calculate buckets\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { CheckCircleOutline, HighlightOff } from '@material-ui/icons'\nimport green from '@material-ui/core/colors/green'\nimport red from '@material-ui/core/colors/red'\n\nexport const Buckets = ({ buckets }) => (\n  <div>\n    <Grid container spacing={2} style={{margin: 50}}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n          {buckets.map((bucket) => (\n            <Grid key={bucket.id} item>\n              <Paper style={{ height: 240, width: 100, marginBottom: 10 }}>\n                <Grid container spacing={2} direction=\"column\">\n                  <Typography variant=\"h5\" component=\"h2\">\n                    #{bucket.id}\n                  </Typography>\n                  <Typography style={{marginBottom:12}} color=\"textSecondary\">\n                    P: {bucket.p}\n                  </Typography>\n                  {bucket.samples.map((sample) => (\n                    <Grid key={sample} item>\n                      Sample #{sample}\n                    </Grid>\n                    ))}\n                </Grid>\n              </Paper>\n              <CheckCircleOutline style={{ color: green[500], cursor: 'pointer' }} />\n              <HighlightOff style={{ color: red[500], cursor: 'pointer' }} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  </div>\n)\n","import React from 'react'\nimport './App.scss'\nimport { Cases } from './cases/Cases'\nimport { SYMPTOMS } from './data'\nimport Container from '@material-ui/core/Container'\nimport { Buckets } from './buckets/Buckets'\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentStep: 'CASES',\n      cases: [{\n        id: 1,\n        symptoms: [],\n        probability: 0\n      },\n        {\n          id: 2,\n          symptoms: [SYMPTOMS.COUGH],\n          probability: 10\n        }\n      ],\n      buckets: []\n    }\n  }\n\n  addCase ({ id, symptoms }) {\n    console.log(id)\n    console.log(symptoms)\n    const probability = 50\n    this.setState((state, props) => {\n      const cases = [...state.cases, { id, symptoms, probability }]\n      return {\n        ...state,\n        cases\n      }\n    })\n  }\n\n  updateCase ({ id, symptoms }) {\n    const probability = 50\n    this.setState((state, props) => {\n      const caseIndex = state.cases.findIndex(it => it.id === id)\n      const cases = state.cases.splice(caseIndex, 1)\n      cases.push({ id, symptoms, probability })\n      return {\n        ...state,\n        cases\n      }\n    })\n  }\n\n  changeStage (currentStep) {\n    this.setState((state, props) => ({\n      ...state,\n      currentStep\n    }))\n  }\n\n  calculateBuckets () {\n    const buckets = [\n      {\n        samples: ['1'], p: 0.03, id: '1'\n      }, { samples: ['2', '3'], p: 0.3, id: '2'\n      }, { samples: ['4', '5', '6', '7', '8'], p: 0.1, id: '3'\n      }, { samples: ['9', '10'], p: 0.3, id: '4'\n      }, { samples: ['11', '12', '13', '14'], p: 0.3, id: '5'\n      }, { samples: ['14'], p: 0.3, id: '6'\n    }\n    ]\n    this.setState((state, props) => {\n      return {\n        ...state,\n        buckets\n      }\n    }, () => this.changeStage('BUCKETS'))\n  }\n\n  render () {\n    if (this.state.currentStep === 'CASES') {\n      return (\n        <Container className=\"App\">\n          <Cases cases={this.state.cases} addCase={this.addCase.bind(this)} calculateBuckets={this.calculateBuckets.bind(this)}/>\n        </Container>\n      )\n    } else {\n      return (\n        <Container className=\"App\">\n          <Buckets buckets={this.state.buckets}/>\n        </Container>\n      )\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}